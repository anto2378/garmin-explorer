#!/usr/bin/env python3
"""
Garmin Explorer Setup Utility

This script helps you set up your Garmin Connect credentials securely.
"""

import getpass
import os
from pathlib import Path


def setup_credentials():
    """Set up Garmin Connect credentials in .env file."""
    print("🔧 Garmin Explorer Setup")
    print("=" * 30)
    print("This will help you set up your Garmin Connect credentials.")
    print(
        "Your credentials will be stored in a local .env file (not committed to git).\n"
    )

    # Check if .env already exists
    env_file = Path(".env")
    if env_file.exists():
        overwrite = input("⚠️  .env file already exists. Overwrite? (y/N): ").lower()
        if overwrite != "y":
            print("Setup cancelled.")
            return

    # Get credentials
    print("Please enter your Garmin Connect credentials:")
    email = input("📧 Email: ").strip()

    if not email:
        print("❌ Email is required.")
        return

    password = getpass.getpass("🔒 Password: ").strip()

    if not password:
        print("❌ Password is required.")
        return

    # Get analysis preferences
    print("\n📊 Analysis preferences (press Enter for defaults):")

    activity_days = input("Days of activity data to analyze (default: 365): ").strip()
    if not activity_days:
        activity_days = "365"

    sleep_days = input("Days of sleep data to analyze (default: 90): ").strip()
    if not sleep_days:
        sleep_days = "90"

    # Create .env file
    env_content = f"""# Garmin Explorer Configuration
# Generated by setup.py - DO NOT commit this file!

# Garmin Connect Credentials
GARMIN_EMAIL={email}
GARMIN_PASSWORD={password}

# Analysis Settings
DEFAULT_ANALYSIS_DAYS={activity_days}
DEFAULT_SLEEP_ANALYSIS_DAYS={sleep_days}

# Chart Settings
CHART_STYLE=seaborn-v0_8
CHART_DPI=300
"""

    try:
        with open(".env", "w") as f:
            f.write(env_content)

        # Set secure permissions
        os.chmod(".env", 0o600)

        print("\n✅ Setup complete!")
        print("📁 Credentials saved to .env file")
        print("🔒 File permissions set to read-only for owner")
        print("\nYou can now run:")
        print("  uv run python example.py        # Activity analysis")
        print("  uv run python sleep_analysis.py # Sleep analysis")

    except Exception as e:
        print(f"❌ Error writing .env file: {e}")


def test_connection():
    """Test the Garmin Connect connection."""
    print("\n🔍 Testing Garmin Connect connection...")

    try:
        from garminconnect import Garmin

        # Load credentials from .env
        if not os.path.exists(".env"):
            print("❌ .env file not found. Run setup first.")
            return

        # Simple way to load .env (for this utility only)
        env_vars = {}
        with open(".env", "r") as f:
            for line in f:
                if "=" in line and not line.startswith("#"):
                    key, value = line.strip().split("=", 1)
                    env_vars[key] = value

        email = env_vars.get("GARMIN_EMAIL")
        password = env_vars.get("GARMIN_PASSWORD")

        if not email or not password:
            print("❌ Credentials not found in .env file.")
            return

        # Test connection
        client = Garmin(email, password)
        client.login()

        # Try to get basic user info
        display_name = client.get_full_name()

        print("✅ Successfully connected to Garmin Connect!")
        print(f"👤 Connected as: {display_name}")

    except ImportError:
        print("❌ garminconnect library not installed. Run: uv sync")
    except Exception as e:
        print(f"❌ Connection failed: {e}")
        print("Please check your credentials and try again.")


def main():
    """Main setup function."""
    print("Welcome to Garmin Explorer Setup! 🏃‍♂️\n")

    while True:
        print("What would you like to do?")
        print("1. Set up credentials")
        print("2. Test connection")
        print("3. Exit")

        choice = input("\nEnter your choice (1-3): ").strip()

        if choice == "1":
            setup_credentials()
        elif choice == "2":
            test_connection()
        elif choice == "3":
            print("Goodbye! 👋")
            break
        else:
            print("Invalid choice. Please enter 1, 2, or 3.")

        print("\n" + "=" * 50 + "\n")


if __name__ == "__main__":
    main()
